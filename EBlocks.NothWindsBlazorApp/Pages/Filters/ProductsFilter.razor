@inherits ProductsFilterBase
@using EBlocks.Models;
@using EBlocks.Interfaces;
@using Newtonsoft.Json;

<h3>Products Filter</h3>

<div>

    <div class="row">
        <div class="col">
            <MatCheckbox @bind-Value="@IsFilteringEnabled" Label="Enable Filtering"></MatCheckbox>
        </div>
        <div class="col">
            <MatSelect Label="Pick a Colunm To Filter" @bind-Value="@SelecteFilterColunm" Disabled="@(!IsFilteringEnabled)">
                <MatOptionString></MatOptionString>
                <MatOptionString Value="category">Category</MatOptionString>
                <MatOptionString Value="supplier">Supplier</MatOptionString>
            </MatSelect>
        </div>
        <div class="col">
            @if (this.IsCategorySelected)
            {
                <MatSelect Label="Pick a category" @bind-Value="@SelecteFilterValue" Disabled="@(!IsFilteringEnabled)">
                    <MatOptionString></MatOptionString>
                    @foreach (var field in FilterValues)
                        {
                        <MatOptionString Value="@field">@Oracle.Categories.First(x => x.CategoryID.ToString().Equals(field))?.CategoryName</MatOptionString>
                        }
                </MatSelect>
            }

            @if (this.IsSupplySelected)
            {
                <MatSelect Label="Pick a supplier" @bind-Value="@SelecteFilterValue" Disabled="@(!IsFilteringEnabled)">
                    <MatOptionString></MatOptionString>
                    @foreach (var field in FilterValues)
                        {
                        <MatOptionString Value="@field">@Oracle.Supplier.First(x => x.SupplierID.ToString().Equals(field))?.CompanyName</MatOptionString>
                        }
                </MatSelect>
            }
        </div>

    </div>



</div>
Selected Field: @SelecteFilterColunm;

@code {




    //public string SelecteFiltervalue { get; set; }

    //public string GroupByColunm { get; set; }








    //public List<string> SupplierValues { get; set; }





    //private void UpdateSelectedFilterValues()
    //{

    //    if (this.SelecteFilterColunm.Equals("category", StringComparison.OrdinalIgnoreCase))
    //    {
    //        var cats = this.CategoryHttpRepository.GetAll("cayegories");
    //    }
    //    else if (this.SelecteFilterColunm.Equals("supplier", StringComparison.OrdinalIgnoreCase))
    //    {

    //    }

    //}



}
